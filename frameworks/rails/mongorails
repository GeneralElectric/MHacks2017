#!/bin/bash
#
# Command wrapper to execute rails commands in a docker container.
#
# Usage: ./mongorais <rails command arguments>
#
# Example: ./mongorails new  generate scaffold User first_name:string last_name:string
# Example: ./mongorails new  generate scaffold User first_name:string last_name:string
#

gemfile() {

  echo "source 'https://rubygems.org'

git_source(:github) do |repo_name|
  repo_name = \"#{repo_name}/#{repo_name}\" unless repo_name.include?(\"/\")
  \"https://github.com/#{repo_name}.git\"
end

gem 'rails', '~> 5.1.4'
gem 'bson_ext'
gem 'mongoid'
gem 'puma', '~> 3.7'
gem 'sass-rails', '~> 5.0'
gem 'uglifier', '>= 1.3.0'
gem 'therubyracer', platforms: :ruby
gem 'coffee-rails', '~> 4.2'
gem 'turbolinks', '~> 5'
gem 'jbuilder', '~> 2.5'
gem 'redis', '~> 3.0'
# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'

group :development, :test do
  gem 'pry-byebug', platforms: [:mri, :mingw, :x64_mingw]
  gem 'rspec-rails'
  gem 'rspec-its'
  gem 'capybara'
end

group :development do
  # Access an IRB console on exception pages or by using <%= console %> anywhere in the code.
  gem 'web-console', '>= 3.3.0'
  gem 'listen', '>= 3.0.5', '< 3.2'
  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
  gem 'spring'
  gem 'spring-watcher-listen', '~> 2.0.0'
end

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
" > app/Gemfile
}

mongoid() {
  echo "development:
  # Configure available database clients. (required)
  clients:
    # Defines the default client. (required)
    default:
      # Defines the name of the default database that Mongoid can connect to.
      # (required).
      database: app_development
      hosts:
        - mongo:27017
  options:

test:
  clients:
    default:
      database: app_test
      hosts:
        - mongo:27017
      options:
        read:
          mode: :primary
        max_pool_size: 1
" > config/mongoid.yml
}

case "$1" in 
  new)
    echo "creating the app"
    rails new app --skip-active-record --skip-test --skip-bundle
    gemfile
    cd app
    mongoid
    ;;
  start)
    docker-compose -f rails-mongo-docker-compose.yml up -d --build
    ;;
  stop)
    docker-compose -f rails-mongo-docker-compose.yml down
    ;;
  *)
    docker-compose -f rails-mongo-docker-compose.yml run app $*
  ;;

esac

exit $?
  
